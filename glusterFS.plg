<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "glusterFS">
<!ENTITY author    "Mark Britton">
<!ENTITY version   "2021">
<!ENTITY md5       "">
<!ENTITY launch    "StartServer">
<!ENTITY plugdir   "/usr/local/emhttp/plugins/&name;">
<!ENTITY github    "britton007/unraid-gluster">
<!ENTITY pluginURL "https://raw.githubusercontent.com/&github;/master/plugins/&name;.plg">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="6.4.0" support="https://lime-technology.com/forums/topic/38582-plug-in-community-applications/">

<CHANGES>


###TBD###
- Initial Release
</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/usr/bin/php">
<INLINE>
<![CDATA[
<?
  $version = parse_ini_file("/etc/unraid-version");
  
  if ( version_compare($version['version'],"6.4.0", "<") )
  {
    echo "********************************************************************\n";
    echo "\n";
    echo "Community Applications Requires unRaid version 6.4.0 or greater to run\n";
    echo "\n";
    echo "********************************************************************\n";
    exit(1);
  }
  echo "Cleaning Up Old Versions\n";
  if ( is_file("/usr/local/emhttp/plugins/community.applications/scripts/removeCron.php") ) {
    exec("/usr/local/emhttp/plugins/community.applications/scripts/removeCron.php");
  }
  exec("rm -rf /usr/local/emhttp/plugins/community.applications");
  @unlink("/etc/cron.daily/updateApplications.sh");
?>
]]>
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
# Remove old 'source' files
rm -f $(ls /boot/config/plugins/&name;/&name;*.txz 2>/dev/null &#124; grep -v '&version;')
if [[ -d /boot/config/plugins/repo.update ]]; then rm -rf /boot/config/plugins/repo.update; fi
if [[ -d /usr/local/emhttp/plugins/repo.update ]]; then rm -rf /usr/local/emhttp/plugins/repo.update; fi
if [[ -n $(ls /boot/config/plugins/repo.update*.plg 2>/dev/null) ]]; then rm /boot/config/plugins/repo.update*.plg; fi

if [[ -e /tmp/community.applications/tempFiles/templates.json ]]; then rm /tmp/community.applications/tempFiles/templates.json; fi
</INLINE>
</FILE>

<!--
The 'source' file.
-->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>https://raw.github.com/&github;/master/archive/&name;-&version;.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
<INLINE>
echo "Creating Directories"
rm -rf /tmp/community.applications/tempFiles
mkdir -p /tmp/community.applications/tempFiles
mkdir -p /boot/config/plugins/community.applications
rm -rf /usr/local/emhttp/plugins/community.applications/CA.page
echo ""
echo "----------------------------------------------------"
echo " &name; has been installed."
echo " Copyright 2015-2018, Andrew Zawadzki"
echo " Version: &version;"
echo "----------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
removepkg &name;-&version;
rm -rf &plugdir;
rm -rf /boot/config/plugins/&name;
rm -rf /var/lib/docker/unraid/templates-community
</INLINE>
</FILE> 
</PLUGIN>
